{"version":3,"sources":["./src/app/actor/actor.component.ts","./src/app/actor/actor.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/app/movie/movie.component.ts","./src/app/movie/movie.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-actor\",\n  templateUrl: \"./actor.component.html\",\n  styleUrls: [\"./actor.component.css\"],\n})\nexport class ActorComponent implements OnInit {\n  actorsDB: any[] = [];\n  section = 1;\n  fullName: string = \"\";\n  bYear: number = 0;\n  actorId: string = \"\";\n  // to show the list of movies available\n  moviesDB: any[] = [];\n\n  //selected movie and actor for section 5\n  selectedActor = null;\n  selectedMovie = null;\n  \n  constructor(private dbService: DatabaseService) {}\n  //Get all Actors\n  onGetActors() {\n    this.dbService.getActors().subscribe((data: any[]) => {\n      this.actorsDB = data;\n    });\n  }\n  //Create a new Actor, POST request\n  onSaveActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.createActor(obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  // Update an Actor\n  onSelectUpdate(item) {\n    this.fullName = item.name;\n    this.bYear = item.bYear;\n    this.actorId = item._id;\n  }\n  onUpdateActor() {\n    let obj = { name: this.fullName, bYear: this.bYear };\n    this.dbService.updateActor(this.actorId, obj).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n  //Delete Actor\n  onDeleteActor(item) {\n    this.dbService.deleteActor(item._id).subscribe(result => {\n      this.onGetActors();\n    });\n  }\n\n  //get movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  onAddActor(){\n    this.dbService.addActorToMovie(this.selectedActor._id, this.selectedMovie._id).subscribe((data: any[]) => {\n      this.onGetMovies();\n    });\n  }\n\n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetActors();\n    this.onGetMovies();\n  }\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n  resetValues() {\n    this.fullName = \"\";\n    this.bYear = 0;\n    this.actorId = \"\";\n    this.selectedActor = null;\n    this.selectedMovie = null;\n  }\n\n  //selecting movie and actor\n  onSelectActor(item){\n    this.selectedActor = item;\n  }\n\n  onSelectMovie(item){\n    this.selectedMovie = item;\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1>Actors and Movies DB System</h1>\n</div>\n<!-- The navigation bar -->\n<nav class=\"navbar navbar-expand-sm bg-light\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Home</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Actor</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(5)\">Add Actor to Movie</a>\n    </li>\n  </ul>\n</nav>\n<!-- First section: Display all in a tble -->\n<div class=\"section\" *ngIf=\"section==1\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{item.name}}</td>\n      <td>{{item.bYear}}</td>\n    </tr>\n  </table>\n</div>\n<!-- Second Section: Add new actor -->\n<div class=\"section\" *ngIf=\"section==2\">\n  <div class=\"form-group\">\n    <label for=\"actorName\">Full Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"actorName\">Birth Year</label>\n    <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveActor()\">Save Actor</button>\n</div>\n<!-- Section 3: Update actor -->\n<div class=\"section\" *ngIf=\"section==3\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Select!</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{item.name}}</td>\n      <td>{{item.bYear}}</td>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button></td>\n    </tr>\n  </table>\n  <hr>\n  <div *ngIf=\"actorsDB.length>0\">\n    <div class=\"form-group\">\n      <label for=\"actorName\">Full Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"fullName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"actorName\">Birth Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"actorName\" [(ngModel)]=\"bYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateActor()\">Update Actor</button>\n  </div>\n</div>\n<!-- Section 4: Delete Actor -->\n<div class=\"section\" *ngIf=\"section==4\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Delete?</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{item.name}}</td>\n      <td>{{item.bYear}}</td>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteActor(item)\">Delete</button></td>\n    </tr>\n  </table>\n</div>\n\n<!-- Section 5: Add Actor to Movie -->\n<div class=\"section\" *ngIf=\"section==5\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Name</th>\n      <th>Birth Year</th>\n      <th>Select</th>\n    </tr>\n    <tr *ngFor=\"let item of actorsDB\">\n      <td>{{item.name}}</td>\n      <td>{{item.bYear}}</td>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectActor(item)\">Select Actor</button></td>\n    </tr>\n  </table>\n\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Title</th>\n      <th>Year</th>\n      <th>Select</th>\n    </tr>\n    <tr *ngFor=\"let item of moviesDB\">\n      <td>{{item.title}}</td>\n      <td>{{item.year}}</td>\n      <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectMovie(item)\">Select Movie</button></td>\n    </tr>\n  </table>\n  <!-- <h3> Your selected Actor is {{selectedActor.name}} and Your selected movie is {{selectedMovie.title}}</h3> -->\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onAddActor()\">Add Actor to Movie</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'movieAng';\n}\n","<style>\n    body {\n        margin-left: auto;\n    }\n</style>\n\n<app-actor></app-actor>\n\n<app-movie></app-movie>\n\n\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { ActorComponent } from \"./actor/actor.component\";\nimport { DatabaseService } from \"./database.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MovieComponent } from './movie/movie.component';\n@NgModule({\n  declarations: [AppComponent, ActorComponent, MovieComponent],\n  imports: [BrowserModule, HttpClientModule, FormsModule],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n};\n\n@Injectable({\n  providedIn: \"root\",\n})\n\nexport class DatabaseService {\n  constructor(private http: HttpClient) {}\n  result: any;\n  getActors() {\n    return this.http.get(\"/actors\");\n  }\n  getActor(id: string) {\n    let url = \"/actors/\" + id;\n    return this.http.get(url);\n  }\n  createActor(data) {\n    return this.http.post(\"/actors\", data, httpOptions);\n  }\n  updateActor(id, data) {\n    let url = \"/actors/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteActor(id) {\n    let url = \"/actors/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  getMovies(){\n    return this.http.get(\"/movies\");\n  }\n  getMovie(id:String){\n    let url = \"/movies/\" + id;\n    return this.http.get(url);\n  }\n  createMovie(data){\n    return this.http.post(\"/movies\", data, httpOptions);\n  }\n  updateMovie(id:string, data){\n    let url = \"/movies/\" + id;\n    return this.http.put(url, data, httpOptions);\n  }\n  deleteMovie(id:string){\n    let url = \"/movies/\" + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  addActorToMovie(mId:string, aId:string){\n    // url to add the actor to the movie\n    let url = '/movies/actors/' + mId + '/' + aId;\n    return this.http.get(url, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  moviesDB: any[] = [];\n  section = 1;\n  title: string = \"\";\n  year: number = 0;\n  movieId: string = \"\";\n  aYear: number = 0;\n\n  constructor(private dbService: DatabaseService) { }\n\n  //get movies\n  onGetMovies() {\n    this.dbService.getMovies().subscribe((data: any[]) => {\n      this.moviesDB = data;\n    });\n  }\n\n  //Create a new Movie, POST request\n  onSaveMovie() {\n    let obj = { title: this.title, year: this.year };\n    this.dbService.createMovie(obj).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  //Delete Movie\n  onDeleteMovie(item) {\n    this.dbService.deleteMovie(item._id).subscribe(result => {\n      this.onGetMovies();\n    });\n  }\n\n  //Delete Movie\n  onDeleteMovies() {\n    // update the movies db\n    this.onGetMovies();\n    let toDelete: any[] = []\n    \n    for(let i =0; i < this.moviesDB.length; i++){\n      if (this.moviesDB[i].year < this.aYear){\n        toDelete.push(this.moviesDB[i])\n      }\n    }\n    // call onDeleteMovie for each item/movie\n    toDelete.forEach(movie => this.onDeleteMovie(movie));\n  }\n\n  //use the same change section function to shift between sections and reset values each time section is changed\n  changeSection(sectionId) {\n    this.section = sectionId;\n    this.resetValues();\n  }\n\n  resetValues() {\n    this.title = \"\";\n    this.year = 0;\n    this.movieId = \"\";\n    this.aYear = 0;\n  }\n\n  ngOnInit(): void {\n    this.onGetMovies();\n  }\n  \n\n}\n","\n  <!-- The navigation bar -->\n  <nav class=\"navbar navbar-expand-sm bg-light\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Display Movies</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add movie</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Delete Movies produced before a year of your choosing</a>\n      </li>\n      <li class=\"nav-item\" style=\"padding-left:0.2in\">\n        <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Movie</a>\n      </li>\n    </ul>\n  </nav>\n  <!-- First section: Display all the movies in a tble -->\n  <div class=\"section\" *ngIf=\"section==1\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Actors</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td *ngFor=\"let actor of item.actors\">{{actor}}</td>\n      </tr>\n    </table>\n  </div>\n  <!-- Second Section: Add new movie -->\n  <div class=\"section\" *ngIf=\"section==2\">\n    <div class=\"form-group\">\n      <label for=\"createMovie\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"movieTitle\" [(ngModel)]=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"createMovie\">Year</label>\n      <input type=\"number\" class=\"form-control\" id=\"movieYear\" [(ngModel)]=\"year\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveMovie()\">Save movie</button>\n  </div>\n  <!-- Section 3: delete movies before some year -->\n  <div class=\"section\" *ngIf=\"section==3\">\n    <div class=\"form-group\">\n        <label for=\"deleteMovie\">Define the year and all the movies before that year will be deleted.</label>\n        <input type=\"number\" class=\"form-control\" id=\"yearDelete\" [(ngModel)]=\"aYear\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-danger\" (click)=\"onDeleteMovies()\">Delete movies</button>\n  </div>\n\n<!-- Section 4: Delete Actor -->\n<div class=\"section\" *ngIf=\"section==4\">\n    <table class=\"table table-striped\">\n      <tr>\n        <th>Title</th>\n        <th>Year</th>\n        <th>Delete?</th>\n      </tr>\n      <tr *ngFor=\"let item of moviesDB\">\n        <td>{{item.title}}</td>\n        <td>{{item.year}}</td>\n        <td><button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteMovie(item)\">Delete</button></td>\n      </tr>\n    </table>\n  </div>\n\n  <!-- Section 5: add Actor to movie -->\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}